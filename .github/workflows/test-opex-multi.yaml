name: Release Opex Dashboard openapi

# Controls when the workflow will run
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - IOPAE-1531-opex-dashboard
    paths:
      - ".github/workflows/test-opex-multi.yaml"
      - "apps/vehicles/openapi/bff-openapi.yaml"
      - ".opex/vehicles/**"
      - "apps/licences/openapi/bff-openapi.yaml"
      - ".opex/licences/**"

jobs:
  check-changes:
    runs-on: ubuntu-22.04
    outputs:
      changed_apps: ${{ steps.set-output.outputs.changed_apps }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check changes for licences
        id: check_licences
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -qE '^apps/licences/|^\.github/workflows/test-opex-multi.yaml|^\.opex/licences/'; then
            echo "licences" >> changed_apps.txt
          fi

      - name: Check changes for vehicles
        id: check_vehicles
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -qE '^apps/vehicles/|^\.github/workflows/test-opex-multi.yaml|^\.opex/vehicles/'; then
            echo "vehicles" >> changed_apps.txt
          fi

      - name: Set output
        id: set-output
        run: |
          if [ -f changed_apps.txt ]; then
            changed_apps=$(cat changed_apps.txt | sort | uniq | jq -R -s -c 'split("\n") | map(select(length > 0))')
            echo "changed_apps=$changed_apps" >> $GITHUB_ENV
            echo "changed_apps=$changed_apps" >> $GITHUB_OUTPUT
            echo "Changed apps: $changed_apps"
          else
            echo "changed_apps=[]" >> $GITHUB_ENV
            echo "changed_apps=[]" >> $GITHUB_OUTPUT
            echo "No changes detected"
          fi

  build:
    needs: check-changes
    runs-on: ubuntu-22.04
    environment: opex-prod-ci
    strategy:
      matrix:
        app: ${{ fromJson(needs.check-changes.outputs.changed_apps) }}
    steps:
      - name: Checkout
        id: checkout
        # from https://github.com/actions/checkout/commits/main
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          persist-credentials: false
          fetch-depth: 0
      # mitigation: opex-dashboard-azure-action currently does not support .opex
      # directory parameter
      - run: |
          cp -r apps/${{ matrix.app }}/.opex ./
        name: Update Path
        shell: bash

      # from https://github.com/pagopa/opex-dashboard-azure-action/
      - uses: pagopa/opex-dashboard-azure-action@3ad80a5e4a2d5a8f342615637072f21b687320ce # action v1.2.1
        with:
          environment: prod
          api-name: ${{ matrix.app }}
          config: .opex/${{ matrix.app }}/env/prod/config.yaml
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          # from https://github.com/pagopa/opex-dashboard-azure-action/pkgs/container/opex-dashboard-azure-action
          docker-version: sha256:04d8ead53c772d23b094c2a395292dc159e6f2905e1b13b5f828f31eac6eb27f
